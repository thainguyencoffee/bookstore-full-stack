name: Commit Stage UI module
on:
  push:
    paths:
      - 'bookstore-ui/**'
      - '.github/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: thainguyencoffee/bookstore-fullstack/bookstore-ui
  VERSION: ${{ github.sha }}

jobs:
  build:
    name: Build and Tests
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          cd bookstore-ui
          npm install
      - name: Build Angular project
        run: |
          cd bookstore-ui
          npm run build
  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [ build ]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
      packages: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up Pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.5.1
      - name: Build container image
        run: |
          cd bookstore-ui
          pack build ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            --buildpack gcr.io/paketo-buildpacks/nginx \
            --builder paketobuildpacks/builder:base \
            -e BP_WEB_SERVER=nginx \
            -e BP_WEB_SERVER_ROOT=bookstore-ui/browser \
            -p dist
      - name: OCI image vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: Publish container image (latest)
        run: |
          docker tag \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest